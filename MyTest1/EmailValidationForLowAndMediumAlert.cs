///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace MyTest1
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The EmailValidationForLowAndMediumAlert recording.
    /// </summary>
    [TestModule("cec334b0-f71d-42a8-9b81-0f13a8a28264", ModuleType.Recording, 1)]
    public partial class EmailValidationForLowAndMediumAlert : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MyTest1Repository repository.
        /// </summary>
        public static MyTest1Repository repo = MyTest1Repository.Instance;

        static EmailValidationForLowAndMediumAlert instance = new EmailValidationForLowAndMediumAlert();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public EmailValidationForLowAndMediumAlert()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static EmailValidationForLowAndMediumAlert Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Website", "Opening web site 'https://www.mailinator.com/' with browser 'Chrome' in maximized mode.", new RecordItemIndex(0));
            Host.Current.OpenBrowser("https://www.mailinator.com/", "Chrome", "", false, true, false, false, false, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Mailinator.AddOverlay' at 147;22.", repo.Mailinator.AddOverlayInfo, new RecordItemIndex(1));
            repo.Mailinator.AddOverlay.Click("147;22");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'qatestesc1' with focus on 'Mailinator.AddOverlay'.", repo.Mailinator.AddOverlayInfo, new RecordItemIndex(2));
            repo.Mailinator.AddOverlay.PressKeys("qatestesc1");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Mailinator.GoToPublic' at 23;7.", repo.Mailinator.GoToPublicInfo, new RecordItemIndex(3));
            repo.Mailinator.GoToPublic.Click("23;7");
            Delay.Milliseconds(0);
            
            try {
                Report.Screenshot(ReportLevel.Info, "User", "EmailValidation", repo.MailinatorMainSiteGoogleChrome.Pane, false, new RecordItemIndex(4));
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(4)); }
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Mailinator.ATagYourIntelliflo' at 132;11.", repo.Mailinator.ATagYourIntellifloInfo, new RecordItemIndex(5));
            repo.Mailinator.ATagYourIntelliflo.Click("132;11");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse scroll Vertical by -120 units.", new RecordItemIndex(6));
            Mouse.ScrollWheel(-120);
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'Mailinator.CamarkerInnerStylingblockContentWrap'.", repo.Mailinator.CamarkerInnerStylingblockContentWrapInfo, new RecordItemIndex(7));
            Validate.Exists(repo.Mailinator.CamarkerInnerStylingblockContentWrapInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'MailinatorMainSiteGoogleChrome.Back' at 17;19.", repo.MailinatorMainSiteGoogleChrome.BackInfo, new RecordItemIndex(8));
            repo.MailinatorMainSiteGoogleChrome.Back.Click("17;19");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='\n                    Weak Wifi connection detected\n                ') on item 'Mailinator.ATagWeakWifiConne'.", repo.Mailinator.ATagWeakWifiConneInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.Mailinator.ATagWeakWifiConneInfo, "InnerText", "\n                    Weak Wifi connection detected\n                ");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Mailinator.ATagWeakWifiConne' at 162;8.", repo.Mailinator.ATagWeakWifiConneInfo, new RecordItemIndex(10));
            repo.Mailinator.ATagWeakWifiConne.Click("162;8");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagName='h2') on item 'Mailinator.SomeH2Tag'.", repo.Mailinator.SomeH2TagInfo, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.Mailinator.SomeH2TagInfo, "TagName", "h2");
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
