///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace MyTest1
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The SensorSettingScreenValidation recording.
    /// </summary>
    [TestModule("8e70262e-083d-4c93-89f7-edfa8cb531b5", ModuleType.Recording, 1)]
    public partial class SensorSettingScreenValidation : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MyTest1Repository repository.
        /// </summary>
        public static MyTest1Repository repo = MyTest1Repository.Instance;

        static SensorSettingScreenValidation instance = new SensorSettingScreenValidation();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public SensorSettingScreenValidation()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static SensorSettingScreenValidation Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.WaterSensor1' at Center", repo.ComPentairPentairhome.WaterSensor1Info, new RecordItemIndex(0));
            repo.ComPentairPentairhome.WaterSensor1.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.ESCsettingGearIcon' at Center", repo.ComPentairPentairhome.ESCsettingGearIconInfo, new RecordItemIndex(1));
            repo.ComPentairPentairhome.ESCsettingGearIcon.Touch();
            Delay.Milliseconds(300);
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibilityLabel='Water Sensor') on item 'ComPentairPentairhome.WaterSensor3'.", repo.ComPentairPentairhome.WaterSensor3Info, new RecordItemIndex(2));
                Validate.AttributeEqual(repo.ComPentairPentairhome.WaterSensor3Info, "AccessibilityLabel", "Water Sensor", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(2)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (PlatformClass='RCTView') on item 'ComPentairPentairhome.RCTView1'.", repo.ComPentairPentairhome.RCTView1Info, new RecordItemIndex(3));
                Validate.AttributeEqual(repo.ComPentairPentairhome.RCTView1Info, "PlatformClass", "RCTView", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(3)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibilityLabel='Product Overview') on item 'ComPentairPentairhome.ProductOverview2'.", repo.ComPentairPentairhome.ProductOverview2Info, new RecordItemIndex(4));
                Validate.AttributeEqual(repo.ComPentairPentairhome.ProductOverview2Info, "AccessibilityLabel", "Product Overview", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(4)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibilityLabel='Notifications') on item 'ComPentairPentairhome.Notifications2'.", repo.ComPentairPentairhome.Notifications2Info, new RecordItemIndex(5));
                Validate.AttributeEqual(repo.ComPentairPentairhome.Notifications2Info, "AccessibilityLabel", "Notifications", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(5)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibilityLabel='Product Support') on item 'ComPentairPentairhome.ProductSupport2'.", repo.ComPentairPentairhome.ProductSupport2Info, new RecordItemIndex(6));
                Validate.AttributeEqual(repo.ComPentairPentairhome.ProductSupport2Info, "AccessibilityLabel", "Product Support", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(6)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibilityLabel='Remote Monitoring') on item 'ComPentairPentairhome.RemoteMonitoring2'.", repo.ComPentairPentairhome.RemoteMonitoring2Info, new RecordItemIndex(7));
                Validate.AttributeEqual(repo.ComPentairPentairhome.RemoteMonitoring2Info, "AccessibilityLabel", "Remote Monitoring", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(7)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibilityLabel='Contact a Professional') on item 'ComPentairPentairhome.ContactAProfessional2'.", repo.ComPentairPentairhome.ContactAProfessional2Info, new RecordItemIndex(8));
                Validate.AttributeEqual(repo.ComPentairPentairhome.ContactAProfessional2Info, "AccessibilityLabel", "Contact a Professional", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(8)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibilityLabel='Freeze Protection') on item 'ComPentairPentairhome.FreezeProtection'.", repo.ComPentairPentairhome.FreezeProtectionInfo, new RecordItemIndex(9));
                Validate.AttributeEqual(repo.ComPentairPentairhome.FreezeProtectionInfo, "AccessibilityLabel", "Freeze Protection", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(9)); }
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.ProductSupport2' at Center", repo.ComPentairPentairhome.ProductSupport2Info, new RecordItemIndex(10));
            repo.ComPentairPentairhome.ProductSupport2.Touch();
            Delay.Milliseconds(300);
            
            try {
                Report.Log(ReportLevel.Info, "Delay", "(Optional Action)\r\nWaiting for 3s.", new RecordItemIndex(11));
                Delay.Duration(3000, false);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(11)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (InnerText='Sensor Support') on item 'ComPentairPentairhome.SensorSupport'.", repo.ComPentairPentairhome.SensorSupportInfo, new RecordItemIndex(12));
                Validate.AttributeEqual(repo.ComPentairPentairhome.SensorSupportInfo, "InnerText", "Sensor Support", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(12)); }
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.RCTImageView1' at Center", repo.ComPentairPentairhome.RCTImageView1Info, new RecordItemIndex(13));
            repo.ComPentairPentairhome.RCTImageView1.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(14));
            Delay.Duration(5000, false);
            
            try {
                Report.Screenshot(ReportLevel.Info, "User", "SensorSetting", repo.ComPentairPentairhome.WaterSensorProductOverviewNotificati, false, new RecordItemIndex(15));
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(15)); }
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.HomeIcon' at Center", repo.ComPentairPentairhome.HomeIconInfo, new RecordItemIndex(16));
            repo.ComPentairPentairhome.HomeIcon.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(17));
            Delay.Duration(3000, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
