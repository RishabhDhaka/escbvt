///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace MyTest1
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ChangeWiFi recording.
    /// </summary>
    [TestModule("cfbb7654-c8db-4a23-8b06-aa376feea684", ModuleType.Recording, 1)]
    public partial class ChangeWiFi : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MyTest1Repository repository.
        /// </summary>
        public static MyTest1Repository repo = MyTest1Repository.Instance;

        static ChangeWiFi instance = new ChangeWiFi();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ChangeWiFi()
        {
            DeviceIDChangeWifi = "PNR04ESC100002F098";
            NetworkName = "Network TP-LINK_F03C";
            SignalStrength = "Signal Strength Good";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ChangeWiFi Instance
        {
            get { return instance; }
        }

#region Variables

        string _DeviceIDChangeWifi;

        /// <summary>
        /// Gets or sets the value of variable DeviceIDChangeWifi.
        /// </summary>
        [TestVariable("4413a25b-3bdf-4798-a8d7-aa78f3930391")]
        public string DeviceIDChangeWifi
        {
            get { return _DeviceIDChangeWifi; }
            set { _DeviceIDChangeWifi = value; }
        }

        string _NetworkName;

        /// <summary>
        /// Gets or sets the value of variable NetworkName.
        /// </summary>
        [TestVariable("10d696cf-8cfc-4bb7-8a26-d343bfb2ca3c")]
        public string NetworkName
        {
            get { return _NetworkName; }
            set { _NetworkName = value; }
        }

        string _SignalStrength;

        /// <summary>
        /// Gets or sets the value of variable SignalStrength.
        /// </summary>
        [TestVariable("1813a0b0-51a4-442d-b523-ae6ddff6be63")]
        public string SignalStrength
        {
            get { return _SignalStrength; }
            set { _SignalStrength = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(0));
            Delay.Duration(10000, false);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.RCTUIImageViewAnimated1' at Center", repo.ComPentairPentairhome.RCTUIImageViewAnimated1Info, new RecordItemIndex(1));
            repo.ComPentairPentairhome.RCTUIImageViewAnimated1.Touch();
            Delay.Milliseconds(300);
            
            try {
                Report.Log(ReportLevel.Info, "Delay", "(Optional Action)\r\nWaiting for 300ms.", new RecordItemIndex(2));
                Delay.Duration(300, false);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(2)); }
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.ESCsettingGearIcon' at Center", repo.ComPentairPentairhome.ESCsettingGearIconInfo, new RecordItemIndex(3));
            repo.ComPentairPentairhome.ESCsettingGearIcon.Touch();
            Delay.Milliseconds(300);
            
            try {
                Report.Log(ReportLevel.Info, "Delay", "(Optional Action)\r\nWaiting for 3s.", new RecordItemIndex(4));
                Delay.Duration(3000, false);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(4)); }
            
            try {
                Report.Log(ReportLevel.Info, "Wait", "(Optional Action)\r\nWaiting 5s for the attribute 'AccessibilityLabel' to equal the specified value 'WiFi'. Associated repository item: 'ComPentairPentairhome.WiFi1'", repo.ComPentairPentairhome.WiFi1Info, new RecordItemIndex(5));
                repo.ComPentairPentairhome.WiFi1Info.WaitForAttributeEqual(5000, "AccessibilityLabel", "WiFi");
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(5)); }
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.WiFi1' at Center", repo.ComPentairPentairhome.WiFi1Info, new RecordItemIndex(6));
            repo.ComPentairPentairhome.WiFi1.Touch();
            Delay.Milliseconds(300);
            
            try {
                Report.Log(ReportLevel.Info, "Delay", "(Optional Action)\r\nWaiting for 5s.", new RecordItemIndex(7));
                Delay.Duration(5000, false);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(7)); }
            
            try {
                Report.Screenshot(ReportLevel.Info, "User", "WifiScreen", repo.ComPentairPentairhome.WiFiNetworkTPLINKF03CSignalStrengt, false, new RecordItemIndex(8));
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(8)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibilityLabel=$NetworkName) on item 'ComPentairPentairhome.NetworkName'.", repo.ComPentairPentairhome.NetworkNameInfo, new RecordItemIndex(9));
                Validate.AttributeEqual(repo.ComPentairPentairhome.NetworkNameInfo, "AccessibilityLabel", NetworkName, null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(9)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibilityLabel=$SignalStrength) on item 'ComPentairPentairhome.SignalStrengthGood'.", repo.ComPentairPentairhome.SignalStrengthGoodInfo, new RecordItemIndex(10));
                Validate.AttributeEqual(repo.ComPentairPentairhome.SignalStrengthGoodInfo, "AccessibilityLabel", SignalStrength, null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(10)); }
            
            try {
                Report.Log(ReportLevel.Info, "Wait", "(Optional Action)\r\nWaiting 5s for the attribute 'AccessibilityLabel' to equal the specified value 'Change WiFi Network'. Associated repository item: 'ComPentairPentairhome.ChangeWiFiNetwork'", repo.ComPentairPentairhome.ChangeWiFiNetworkInfo, new RecordItemIndex(11));
                repo.ComPentairPentairhome.ChangeWiFiNetworkInfo.WaitForAttributeEqual(5000, "AccessibilityLabel", "Change WiFi Network");
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(11)); }
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.ChangeWiFiNetwork' at Center", repo.ComPentairPentairhome.ChangeWiFiNetworkInfo, new RecordItemIndex(12));
            repo.ComPentairPentairhome.ChangeWiFiNetwork.Touch();
            Delay.Milliseconds(300);
            
            try {
                Report.Log(ReportLevel.Info, "Delay", "(Optional Action)\r\nWaiting for 5s.", new RecordItemIndex(13));
                Delay.Duration(5000, false);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(13)); }
            
            try {
                Report.Screenshot(ReportLevel.Info, "User", "SetupBLE", repo.ComPentairPentairhome.SetUpBluetoothRConnectionIsYourInte, false, new RecordItemIndex(14));
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(14)); }
            
            try {
                Report.Log(ReportLevel.Info, "Wait", "(Optional Action)\r\nWaiting 5s for the attribute 'AccessibilityLabel' to equal the specified value 'CONTINUE'. Associated repository item: 'ComPentairPentairhome.CONTINUE'", repo.ComPentairPentairhome.CONTINUEInfo, new RecordItemIndex(15));
                repo.ComPentairPentairhome.CONTINUEInfo.WaitForAttributeEqual(5000, "AccessibilityLabel", "CONTINUE");
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(15)); }
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.CONTINUE' at Center", repo.ComPentairPentairhome.CONTINUEInfo, new RecordItemIndex(16));
            repo.ComPentairPentairhome.CONTINUE.Touch();
            Delay.Milliseconds(300);
            
            try {
                Report.Screenshot(ReportLevel.Info, "User", "selectesc", repo.ComPentairPentairhome.SelectYourIntelliSyncControlAndMoni, false, new RecordItemIndex(17));
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(17)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibilityLabel=$DeviceIDChangeWifi) on item 'ComPentairPentairhome.PNR04ESC100002F098'.", repo.ComPentairPentairhome.PNR04ESC100002F098Info, new RecordItemIndex(18));
                Validate.AttributeEqual(repo.ComPentairPentairhome.PNR04ESC100002F098Info, "AccessibilityLabel", DeviceIDChangeWifi, null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(18)); }
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.PNR04ESC100002F098' at Center", repo.ComPentairPentairhome.PNR04ESC100002F098Info, new RecordItemIndex(19));
            repo.ComPentairPentairhome.PNR04ESC100002F098.Touch();
            Delay.Milliseconds(300);
            
            try {
                Report.Log(ReportLevel.Info, "Delay", "(Optional Action)\r\nWaiting for 8s.", new RecordItemIndex(20));
                Delay.Duration(8000, false);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(20)); }
            
            try {
                Report.Screenshot(ReportLevel.Info, "User", "bleconnected", repo.ComPentairPentairhome.BluetoothRWirelessConnectionEstablishe, false, new RecordItemIndex(21));
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(21)); }
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.CONTINUE1' at Center", repo.ComPentairPentairhome.CONTINUE1Info, new RecordItemIndex(22));
            repo.ComPentairPentairhome.CONTINUE1.Touch();
            Delay.Milliseconds(300);
            
            try {
                Report.Log(ReportLevel.Info, "Wait", "(Optional Action)\r\nWaiting 5s for the attribute 'AccessibilityLabel' to equal the specified value 'TP-LINK_F03C'. Associated repository item: 'ComPentairPentairhome.TPLINKF03C'", repo.ComPentairPentairhome.TPLINKF03CInfo, new RecordItemIndex(23));
                repo.ComPentairPentairhome.TPLINKF03CInfo.WaitForAttributeEqual(5000, "AccessibilityLabel", "TP-LINK_F03C");
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(23)); }
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.TPLINKF03C' at Center", repo.ComPentairPentairhome.TPLINKF03CInfo, new RecordItemIndex(24));
            repo.ComPentairPentairhome.TPLINKF03C.Touch();
            Delay.Milliseconds(300);
            
            try {
                Report.Log(ReportLevel.Info, "Set value", "(Optional Action)\r\nSetting attribute Text to '28331827' on item 'ComPentairPentairhome.RCTUITextField'.", repo.ComPentairPentairhome.RCTUITextFieldInfo, new RecordItemIndex(25));
                repo.ComPentairPentairhome.RCTUITextField.Element.SetAttributeValue("Text", "28331827");
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(25)); }
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.CONTINUE' at Center", repo.ComPentairPentairhome.CONTINUEInfo, new RecordItemIndex(26));
            repo.ComPentairPentairhome.CONTINUE.Touch();
            Delay.Milliseconds(300);
            
            try {
                Report.Log(ReportLevel.Info, "Wait", "(Optional Action)\r\nWaiting 5s for the attribute 'AccessibilityLabel' to equal the specified value 'OK'. Associated repository item: 'ComPentairPentairhome.TextOK'", repo.ComPentairPentairhome.TextOKInfo, new RecordItemIndex(27));
                repo.ComPentairPentairhome.TextOKInfo.WaitForAttributeEqual(5000, "AccessibilityLabel", "OK");
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(27)); }
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.TextOK' at Center", repo.ComPentairPentairhome.TextOKInfo, new RecordItemIndex(28));
            repo.ComPentairPentairhome.TextOK.Touch();
            Delay.Milliseconds(300);
            
            try {
                Report.Log(ReportLevel.Info, "Delay", "(Optional Action)\r\nWaiting for 15s.", new RecordItemIndex(29));
                Delay.Duration(15000, false);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(29)); }
            
            try {
                Report.Screenshot(ReportLevel.Info, "User", "UpdatedWifiNetwork", repo.ComPentairPentairhome.WiFiNetworkTPLINKF03CSignalStrengt1, false, new RecordItemIndex(30));
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(30)); }
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.HomeIcon' at Center", repo.ComPentairPentairhome.HomeIconInfo, new RecordItemIndex(31));
            repo.ComPentairPentairhome.HomeIcon.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(32));
            Delay.Duration(3000, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
