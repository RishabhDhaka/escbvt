///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace MyTest1
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AddESC recording.
    /// </summary>
    [TestModule("aa0449c1-b80a-49cd-b8ce-0caa0f6da9cd", ModuleType.Recording, 1)]
    public partial class AddESC : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MyTest1Repository repository.
        /// </summary>
        public static MyTest1Repository repo = MyTest1Repository.Instance;

        static AddESC instance = new AddESC();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AddESC()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AddESC Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibilityLabel='Add a Device') on item 'ComPentairPentairhome.AddADevice'.", repo.ComPentairPentairhome.AddADeviceInfo, new RecordItemIndex(0));
                Validate.AttributeEqual(repo.ComPentairPentairhome.AddADeviceInfo, "AccessibilityLabel", "Add a Device", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(0)); }
            
            try {
                Report.Log(ReportLevel.Info, "Wait", "(Optional Action)\r\nWaiting 5s for the attribute 'AccessibilityLabel' to equal the specified value 'Add a Device'. Associated repository item: 'ComPentairPentairhome.AddADevice'", repo.ComPentairPentairhome.AddADeviceInfo, new RecordItemIndex(1));
                repo.ComPentairPentairhome.AddADeviceInfo.WaitForAttributeEqual(5000, "AccessibilityLabel", "Add a Device");
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(1)); }
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.AddADevice' at Center", repo.ComPentairPentairhome.AddADeviceInfo, new RecordItemIndex(2));
            repo.ComPentairPentairhome.AddADevice.Touch();
            Delay.Milliseconds(300);
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibilityLabel='IntelliSync ') on item 'ComPentairPentairhome.IntelliSync'.", repo.ComPentairPentairhome.IntelliSyncInfo, new RecordItemIndex(3));
                Validate.AttributeEqual(repo.ComPentairPentairhome.IntelliSyncInfo, "AccessibilityLabel", "IntelliSync ", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(3)); }
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.IntelliSync' at Center", repo.ComPentairPentairhome.IntelliSyncInfo, new RecordItemIndex(4));
            repo.ComPentairPentairhome.IntelliSync.Touch();
            Delay.Milliseconds(300);
            
            try {
                Report.Log(ReportLevel.Info, "Delay", "(Optional Action)\r\nWaiting for 3s.", new RecordItemIndex(5));
                Delay.Duration(3000, false);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(5)); }
            
            try {
                Report.Screenshot(ReportLevel.Info, "User", "InstallationScreen", repo.ComPentairPentairhome.InstallationScreen, false, new RecordItemIndex(6));
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(6)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibilityLabel='Step 1 of 4') on item 'ComPentairPentairhome.Step1Of4'.", repo.ComPentairPentairhome.Step1Of4Info, new RecordItemIndex(7));
                Validate.AttributeEqual(repo.ComPentairPentairhome.Step1Of4Info, "AccessibilityLabel", "Step 1 of 4", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(7)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibilityLabel='Installation') on item 'ComPentairPentairhome.Installation'.", repo.ComPentairPentairhome.InstallationInfo, new RecordItemIndex(8));
                Validate.AttributeEqual(repo.ComPentairPentairhome.InstallationInfo, "AccessibilityLabel", "Installation", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(8)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibilityLabel='IntelliSync Control and Monitoring System') on item 'ComPentairPentairhome.IntelliSyncControlAndMonitoringSyste'.", repo.ComPentairPentairhome.IntelliSyncControlAndMonitoringSysteInfo, new RecordItemIndex(9));
                Validate.AttributeEqual(repo.ComPentairPentairhome.IntelliSyncControlAndMonitoringSysteInfo, "AccessibilityLabel", "IntelliSync Control and Monitoring System", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(9)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibilityLabel='assets/src/Common_Feature/Images/easyConnect3@2x.png') on item 'ComPentairPentairhome.EScImageOnEditDashboard'.", repo.ComPentairPentairhome.EScImageOnEditDashboardInfo, new RecordItemIndex(10));
                Validate.AttributeEqual(repo.ComPentairPentairhome.EScImageOnEditDashboardInfo, "AccessibilityLabel", "assets/src/Common_Feature/Images/easyConnect3@2x.png", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(10)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibilityLabel='Press and hold the mode button on IntelliSync for 3 seconds to place the device in pairing mode.') on item 'ComPentairPentairhome.PressAndHoldTheModeButtonOnIntell'.", repo.ComPentairPentairhome.PressAndHoldTheModeButtonOnIntellInfo, new RecordItemIndex(11));
                Validate.AttributeEqual(repo.ComPentairPentairhome.PressAndHoldTheModeButtonOnIntellInfo, "AccessibilityLabel", "Press and hold the mode button on IntelliSync for 3 seconds to place the device in pairing mode.", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(11)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibilityLabel='CONTINUE') on item 'ComPentairPentairhome.CONTINUE2'.", repo.ComPentairPentairhome.CONTINUE2Info, new RecordItemIndex(12));
                Validate.AttributeEqual(repo.ComPentairPentairhome.CONTINUE2Info, "AccessibilityLabel", "CONTINUE", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(12)); }
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.CONTINUE2' at Center", repo.ComPentairPentairhome.CONTINUE2Info, new RecordItemIndex(13));
            repo.ComPentairPentairhome.CONTINUE2.Touch();
            Delay.Milliseconds(300);
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibilityLabel='Step 2 of 4        ') on item 'ComPentairPentairhome.Step2Of4'.", repo.ComPentairPentairhome.Step2Of4Info, new RecordItemIndex(14));
                Validate.AttributeEqual(repo.ComPentairPentairhome.Step2Of4Info, "AccessibilityLabel", "Step 2 of 4        ", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(14)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibilityLabel='Set Up Bluetooth®Connection') on item 'ComPentairPentairhome.SetUpBluetoothRConnection'.", repo.ComPentairPentairhome.SetUpBluetoothRConnectionInfo, new RecordItemIndex(15));
                Validate.AttributeEqual(repo.ComPentairPentairhome.SetUpBluetoothRConnectionInfo, "AccessibilityLabel", "Set Up Bluetooth®Connection", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(15)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibilityLabel='Is your IntelliSync Control and Monitoring System in pairing mode?') on item 'ComPentairPentairhome.IsYourIntelliSyncControlAndMonitori'.", repo.ComPentairPentairhome.IsYourIntelliSyncControlAndMonitoriInfo, new RecordItemIndex(16));
                Validate.AttributeEqual(repo.ComPentairPentairhome.IsYourIntelliSyncControlAndMonitoriInfo, "AccessibilityLabel", "Is your IntelliSync Control and Monitoring System in pairing mode?", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(16)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibilityLabel='Pairing mode is indicated by a flashing green light. If green light is not flashing, press and hold the mode button for 3 seconds to place the device in pairing mode. Make sure your phone's Bluetooth is ON.') on item 'ComPentairPentairhome.PairingModeIsIndicatedByAFlashing'.", repo.ComPentairPentairhome.PairingModeIsIndicatedByAFlashingInfo, new RecordItemIndex(17));
                Validate.AttributeEqual(repo.ComPentairPentairhome.PairingModeIsIndicatedByAFlashingInfo, "AccessibilityLabel", "Pairing mode is indicated by a flashing green light. If green light is not flashing, press and hold the mode button for 3 seconds to place the device in pairing mode. Make sure your phone's Bluetooth is ON.", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(17)); }
            
            try {
                Report.Log(ReportLevel.Info, "Touch gestures", "(Optional Action)\r\nSwipe gesture with direction 'Up (270°)' starting from 'Center' with distance '1.0' with swipe duration'800ms' and step count '0' on item 'ComPentairPentairhome.PairingModeIsIndicatedByAFlashing'.", repo.ComPentairPentairhome.PairingModeIsIndicatedByAFlashingInfo, new RecordItemIndex(18));
                repo.ComPentairPentairhome.PairingModeIsIndicatedByAFlashing.Swipe(Location.Center, ValueConverter.ArgumentFromString<Ranorex.Core.Recorder.Touch.GestureDirection>("SwipeDirection", "Up (270°)"), ValueConverter.ArgumentFromString<Ranorex.Core.Distance>("Distance", "1.0"), ValueConverter.ArgumentFromString<Ranorex.Duration>("SwipeDuration", "800ms"), 0);
                Delay.Milliseconds(500);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(18)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibilityLabel='CONTINUE') on item 'ComPentairPentairhome.CONTINUE3'.", repo.ComPentairPentairhome.CONTINUE3Info, new RecordItemIndex(19));
                Validate.AttributeEqual(repo.ComPentairPentairhome.CONTINUE3Info, "AccessibilityLabel", "CONTINUE", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(19)); }
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.CONTINUE3' at Center", repo.ComPentairPentairhome.CONTINUE3Info, new RecordItemIndex(20));
            repo.ComPentairPentairhome.CONTINUE3.Touch();
            Delay.Milliseconds(300);
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibilityLabel='Select Your IntelliSync Control and Monitoring System ') on item 'ComPentairPentairhome.SelectYourIntelliSyncControlAndMoni1'.", repo.ComPentairPentairhome.SelectYourIntelliSyncControlAndMoni1Info, new RecordItemIndex(21));
                Validate.AttributeEqual(repo.ComPentairPentairhome.SelectYourIntelliSyncControlAndMoni1Info, "AccessibilityLabel", "Select Your IntelliSync Control and Monitoring System ", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(21)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibilityLabel='Step 2 of 4') on item 'ComPentairPentairhome.Step2Of41'.", repo.ComPentairPentairhome.Step2Of41Info, new RecordItemIndex(22));
                Validate.AttributeEqual(repo.ComPentairPentairhome.Step2Of41Info, "AccessibilityLabel", "Step 2 of 4", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(22)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibilityLabel='PNR04ESC100002F098 ') on item 'ComPentairPentairhome.PNR04ESC100002F0981'.", repo.ComPentairPentairhome.PNR04ESC100002F0981Info, new RecordItemIndex(23));
                Validate.AttributeEqual(repo.ComPentairPentairhome.PNR04ESC100002F0981Info, "AccessibilityLabel", "PNR04ESC100002F098 ", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(23)); }
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.PNR04ESC100002F0981' at Center", repo.ComPentairPentairhome.PNR04ESC100002F0981Info, new RecordItemIndex(24));
            repo.ComPentairPentairhome.PNR04ESC100002F0981.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(25));
            Delay.Duration(5000, false);
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibilityLabel='Bluetooth® WirelessConnection Established') on item 'ComPentairPentairhome.BluetoothRWirelessConnectionEstablishe1'.", repo.ComPentairPentairhome.BluetoothRWirelessConnectionEstablishe1Info, new RecordItemIndex(26));
                Validate.AttributeEqual(repo.ComPentairPentairhome.BluetoothRWirelessConnectionEstablishe1Info, "AccessibilityLabel", "Bluetooth® WirelessConnection Established", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(26)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibilityLabel='IntelliSync Control and Monitoring System  is now paired to Bluetooth wireless. Stay connected while you're away by connecting your IntelliSync Control and Monitoring System to your home WiFi network.') on item 'ComPentairPentairhome.IntelliSyncControlAndMonitoringSyste1'.", repo.ComPentairPentairhome.IntelliSyncControlAndMonitoringSyste1Info, new RecordItemIndex(27));
                Validate.AttributeEqual(repo.ComPentairPentairhome.IntelliSyncControlAndMonitoringSyste1Info, "AccessibilityLabel", "IntelliSync Control and Monitoring System  is now paired to Bluetooth wireless. Stay connected while you're away by connecting your IntelliSync Control and Monitoring System to your home WiFi network.", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(27)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibilityLabel='CONTINUE') on item 'ComPentairPentairhome.CONTINUE4'.", repo.ComPentairPentairhome.CONTINUE4Info, new RecordItemIndex(28));
                Validate.AttributeEqual(repo.ComPentairPentairhome.CONTINUE4Info, "AccessibilityLabel", "CONTINUE", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(28)); }
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.CONTINUE4' at Center", repo.ComPentairPentairhome.CONTINUE4Info, new RecordItemIndex(29));
            repo.ComPentairPentairhome.CONTINUE4.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (AccessibilityLabel='Step 3 of 4        ') on item 'ComPentairPentairhome.Step3Of4'.", repo.ComPentairPentairhome.Step3Of4Info, new RecordItemIndex(30));
            Validate.AttributeEqual(repo.ComPentairPentairhome.Step3Of4Info, "AccessibilityLabel", "Step 3 of 4        ");
            Delay.Milliseconds(0);
            
            try {
                Report.Log(ReportLevel.Info, "Delay", "(Optional Action)\r\nWaiting for 4s.", new RecordItemIndex(31));
                Delay.Duration(4000, false);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(31)); }
            
            try {
                //Report.Screenshot(ReportLevel.Info, "User", "WifiList", repo.ComPentairPentairhome.AddADeviceVerticalScrollBar1Page, false, new RecordItemIndex(32));
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(32)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibilityLabel='TP-LINK_F03C ') on item 'ComPentairPentairhome.TPLINKF03C1'.", repo.ComPentairPentairhome.TPLINKF03C1Info, new RecordItemIndex(33));
                Validate.AttributeEqual(repo.ComPentairPentairhome.TPLINKF03C1Info, "AccessibilityLabel", "TP-LINK_F03C ", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(33)); }
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.TPLINKF03C1' at Center", repo.ComPentairPentairhome.TPLINKF03C1Info, new RecordItemIndex(34));
            repo.ComPentairPentairhome.TPLINKF03C1.Touch();
            Delay.Milliseconds(300);
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibilityLabel='Connect YourDevice to WiFi') on item 'ComPentairPentairhome.ConnectYourDeviceToWiFi'.", repo.ComPentairPentairhome.ConnectYourDeviceToWiFiInfo, new RecordItemIndex(35));
                Validate.AttributeEqual(repo.ComPentairPentairhome.ConnectYourDeviceToWiFiInfo, "AccessibilityLabel", "Connect YourDevice to WiFi", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(35)); }
            
            try {
                Report.Log(ReportLevel.Info, "Set value", "(Optional Action)\r\nSetting attribute Text to '28331827' on item 'ComPentairPentairhome.RCTUITextField'.", repo.ComPentairPentairhome.RCTUITextFieldInfo, new RecordItemIndex(36));
                repo.ComPentairPentairhome.RCTUITextField.Element.SetAttributeValue("Text", "28331827");
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(36)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibilityLabel='CONTINUE') on item 'ComPentairPentairhome.CONTINUE5'.", repo.ComPentairPentairhome.CONTINUE5Info, new RecordItemIndex(37));
                Validate.AttributeEqual(repo.ComPentairPentairhome.CONTINUE5Info, "AccessibilityLabel", "CONTINUE", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(37)); }
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.CONTINUE5' at Center", repo.ComPentairPentairhome.CONTINUE5Info, new RecordItemIndex(38));
            repo.ComPentairPentairhome.CONTINUE5.Touch();
            Delay.Milliseconds(300);
            
            try {
                Report.Log(ReportLevel.Info, "Delay", "(Optional Action)\r\nWaiting for 6s.", new RecordItemIndex(39));
                Delay.Duration(6000, false);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(39)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibilityLabel='Step 4 of 4') on item 'ComPentairPentairhome.Step4Of4'.", repo.ComPentairPentairhome.Step4Of4Info, new RecordItemIndex(40));
                Validate.AttributeEqual(repo.ComPentairPentairhome.Step4Of4Info, "AccessibilityLabel", "Step 4 of 4", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(40)); }
            
            try {
                Report.Log(ReportLevel.Info, "Delay", "(Optional Action)\r\nWaiting for 3s.", new RecordItemIndex(41));
                Delay.Duration(3000, false);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(41)); }
            
            try {
                Report.Screenshot(ReportLevel.Info, "User", "AddressProvisioning", repo.ComPentairPentairhome.Step4Of4IntelliSyncPleaseAddAL, false, new RecordItemIndex(42));
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(42)); }
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.CONTINUE6' at Center", repo.ComPentairPentairhome.CONTINUE6Info, new RecordItemIndex(43));
            repo.ComPentairPentairhome.CONTINUE6.Touch();
            Delay.Milliseconds(300);
            
            try {
                Report.Log(ReportLevel.Info, "Delay", "(Optional Action)\r\nWaiting for 3s.", new RecordItemIndex(44));
                Delay.Duration(3000, false);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(44)); }
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Text to 'intellisync' on item 'ComPentairPentairhome.RCTUITextField'.", repo.ComPentairPentairhome.RCTUITextFieldInfo, new RecordItemIndex(45));
            repo.ComPentairPentairhome.RCTUITextField.Element.SetAttributeValue("Text", "intellisync");
            Delay.Milliseconds(0);
            
            try {
                Report.Log(ReportLevel.Info, "Delay", "(Optional Action)\r\nWaiting for 4s.", new RecordItemIndex(46));
                Delay.Duration(4000, false);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(46)); }
            
            try {
                Report.Log(ReportLevel.Info, "Wait", "(Optional Action)\r\nWaiting 5s for the attribute 'AccessibilityLabel' to equal the specified value 'SAVE'. Associated repository item: 'ComPentairPentairhome.SAVE'", repo.ComPentairPentairhome.SAVEInfo, new RecordItemIndex(47));
                repo.ComPentairPentairhome.SAVEInfo.WaitForAttributeEqual(5000, "AccessibilityLabel", "SAVE");
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(47)); }
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.SAVE' at Center", repo.ComPentairPentairhome.SAVEInfo, new RecordItemIndex(48));
            repo.ComPentairPentairhome.SAVE.Touch();
            Delay.Milliseconds(300);
            
            try {
                Report.Log(ReportLevel.Info, "Delay", "(Optional Action)\r\nWaiting for 5s.", new RecordItemIndex(49));
                Delay.Duration(5000, false);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(49)); }
            
            try {
                Report.Log(ReportLevel.Info, "Validation", "(Optional Action)\r\nValidating AttributeEqual (AccessibilityLabel='Installation Completed') on item 'ComPentairPentairhome.InstallationCompleted'.", repo.ComPentairPentairhome.InstallationCompletedInfo, new RecordItemIndex(50));
                Validate.AttributeEqual(repo.ComPentairPentairhome.InstallationCompletedInfo, "AccessibilityLabel", "Installation Completed", null, false);
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(50)); }
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.CONTINUE' at Center", repo.ComPentairPentairhome.CONTINUEInfo, new RecordItemIndex(51));
            repo.ComPentairPentairhome.CONTINUE.Touch();
            Delay.Milliseconds(300);
            
            try {
                Report.Screenshot(ReportLevel.Info, "User", "NotificationWhileProvisioning", repo.ComPentairPentairhome.NotificationsEmailsWillAlwaysBeSent, false, new RecordItemIndex(52));
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(52)); }
            
            try {
                Report.Log(ReportLevel.Info, "Delay", "(Optional Action)\r\nWaiting for 5s.", new RecordItemIndex(53));
                Delay.Duration(5000, false);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(53)); }
            
            try {
                Report.Log(ReportLevel.Info, "Touch", "(Optional Action)\r\nTouch item 'ComPentairPentairhome.CONTINUE' at Center", repo.ComPentairPentairhome.CONTINUEInfo, new RecordItemIndex(54));
                repo.ComPentairPentairhome.CONTINUE.Touch();
                Delay.Milliseconds(300);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(54)); }
            
            //Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.CONTINUE1' at Center", repo.ComPentairPentairhome.CONTINUE1Info, new RecordItemIndex(55));
            //repo.ComPentairPentairhome.CONTINUE1.Touch();
            //Delay.Milliseconds(300);
            
            try {
                //Report.Log(ReportLevel.Info, "Touch", "(Optional Action)\r\nTouch item 'ComPentairPentairhome.CONTINUE' at Center", repo.ComPentairPentairhome.CONTINUEInfo, new RecordItemIndex(56));
                //repo.ComPentairPentairhome.CONTINUE.Touch();
                //Delay.Milliseconds(300);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(56)); }
            
            try {
                Report.Log(ReportLevel.Info, "Delay", "(Optional Action)\r\nWaiting for 5s.", new RecordItemIndex(57));
                Delay.Duration(5000, false);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(57)); }
            
            try {
                Report.Screenshot(ReportLevel.Info, "User", "wantRemoteMonitoring", repo.ComPentairPentairhome.SKIPWantRemoteMonitoringRemoteMonit, false, new RecordItemIndex(58));
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(58)); }
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.SKIP1' at Center", repo.ComPentairPentairhome.SKIP1Info, new RecordItemIndex(59));
            repo.ComPentairPentairhome.SKIP1.Touch();
            Delay.Milliseconds(300);
            
            try {
                Report.Log(ReportLevel.Info, "Delay", "(Optional Action)\r\nWaiting for 2s.", new RecordItemIndex(60));
                Delay.Duration(2000, false);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(60)); }
            
            try {
                Report.Screenshot(ReportLevel.Info, "User", "MyDeviceAfterDeviceAddition", repo.ComPentairPentairhome.MyDevicesPoolSpaIntellisyncVertica, false, new RecordItemIndex(61));
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(61)); }
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ComPentairPentairhome.HomeIcon' at Center", repo.ComPentairPentairhome.HomeIconInfo, new RecordItemIndex(62));
            repo.ComPentairPentairhome.HomeIcon.Touch();
            Delay.Milliseconds(300);
            
            try {
                Report.Log(ReportLevel.Info, "Delay", "(Optional Action)\r\nWaiting for 3s.", new RecordItemIndex(63));
                Delay.Duration(3000, false);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(63)); }
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
